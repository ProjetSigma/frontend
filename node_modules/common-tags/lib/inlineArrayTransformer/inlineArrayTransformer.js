'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var defaults = {
  separator: ''
};

/**
 * Converts an array substitution to a string containing a list
 * @param  {String} opts.separator = '' - the character that separates each item
 * @param  {String} [opts.conjunction]  - replace the last separator with this
 * @return {Object}                     - a TemplateTag transformer
 */
var inlineArrayTransformer = function inlineArrayTransformer() {
  var opts = arguments.length <= 0 || arguments[0] === undefined ? defaults : arguments[0];
  return {
    onSubstitution: function onSubstitution(substitution, resultSoFar) {
      // only operate on arrays
      if (Array.isArray(substitution)) {
        var separator = opts.separator;
        var conjunction = opts.conjunction;
        // join each item in the array into a string where each item is separated by separator
        // be sure to maintain indentation
        var indent = resultSoFar.match(/(\s+)$/);
        if (indent) {
          substitution = substitution.join(separator + indent[1]);
        } else {
          substitution = substitution.join(separator + ' ');
        }
        // if conjunction is set, replace the last separator with conjunction
        if (conjunction) {
          var separatorIndex = substitution.lastIndexOf(separator);
          substitution = substitution.substr(0, separatorIndex) + ' ' + conjunction + substitution.substr(separatorIndex + 1);
        }
      }
      return substitution;
    }
  };
};

exports.default = inlineArrayTransformer;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmxpbmVBcnJheVRyYW5zZm9ybWVyL2lubGluZUFycmF5VHJhbnNmb3JtZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBRUEsSUFBTSxXQUFXO0FBQ2YsYUFBVztBQURJLENBQWpCOzs7Ozs7OztBQVVBLElBQU0seUJBQXlCLFNBQXpCLHNCQUF5QjtBQUFBLE1BQUMsSUFBRCx5REFBUSxRQUFSO0FBQUEsU0FBc0I7QUFDbkQsa0JBRG1ELDBCQUNuQyxZQURtQyxFQUNyQixXQURxQixFQUNSOztBQUV6QyxVQUFJLE1BQU0sT0FBTixDQUFjLFlBQWQsQ0FBSixFQUFpQztBQUMvQixZQUFNLFlBQVksS0FBSyxTQUF2QjtBQUNBLFlBQU0sY0FBYyxLQUFLLFdBQXpCOzs7QUFHQSxZQUFNLFNBQVMsWUFBWSxLQUFaLENBQWtCLFFBQWxCLENBQWY7QUFDQSxZQUFJLE1BQUosRUFBWTtBQUNWLHlCQUFlLGFBQWEsSUFBYixDQUFrQixZQUFZLE9BQU8sQ0FBUCxDQUE5QixDQUFmO0FBQ0QsU0FGRCxNQUVPO0FBQ0wseUJBQWUsYUFBYSxJQUFiLENBQWtCLFlBQVksR0FBOUIsQ0FBZjtBQUNEOztBQUVELFlBQUksV0FBSixFQUFpQjtBQUNmLGNBQU0saUJBQWlCLGFBQWEsV0FBYixDQUF5QixTQUF6QixDQUF2QjtBQUNBLHlCQUFlLGFBQ1osTUFEWSxDQUNMLENBREssRUFDRixjQURFLElBQ2dCLEdBRGhCLEdBQ3NCLFdBRHRCLEdBRVgsYUFBYSxNQUFiLENBQW9CLGlCQUFpQixDQUFyQyxDQUZKO0FBR0Q7QUFDRjtBQUNELGFBQU8sWUFBUDtBQUNEO0FBdkJrRCxHQUF0QjtBQUFBLENBQS9COztrQkEwQmUsc0IiLCJmaWxlIjoiaW5saW5lQXJyYXlUcmFuc2Zvcm1lci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBkZWZhdWx0cyA9IHtcbiAgc2VwYXJhdG9yOiAnJ1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGFuIGFycmF5IHN1YnN0aXR1dGlvbiB0byBhIHN0cmluZyBjb250YWluaW5nIGEgbGlzdFxuICogQHBhcmFtICB7U3RyaW5nfSBvcHRzLnNlcGFyYXRvciA9ICcnIC0gdGhlIGNoYXJhY3RlciB0aGF0IHNlcGFyYXRlcyBlYWNoIGl0ZW1cbiAqIEBwYXJhbSAge1N0cmluZ30gW29wdHMuY29uanVuY3Rpb25dICAtIHJlcGxhY2UgdGhlIGxhc3Qgc2VwYXJhdG9yIHdpdGggdGhpc1xuICogQHJldHVybiB7T2JqZWN0fSAgICAgICAgICAgICAgICAgICAgIC0gYSBUZW1wbGF0ZVRhZyB0cmFuc2Zvcm1lclxuICovXG5jb25zdCBpbmxpbmVBcnJheVRyYW5zZm9ybWVyID0gKG9wdHMgPSBkZWZhdWx0cykgPT4gKHtcbiAgb25TdWJzdGl0dXRpb24gKHN1YnN0aXR1dGlvbiwgcmVzdWx0U29GYXIpIHtcbiAgICAvLyBvbmx5IG9wZXJhdGUgb24gYXJyYXlzXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoc3Vic3RpdHV0aW9uKSkge1xuICAgICAgY29uc3Qgc2VwYXJhdG9yID0gb3B0cy5zZXBhcmF0b3JcbiAgICAgIGNvbnN0IGNvbmp1bmN0aW9uID0gb3B0cy5jb25qdW5jdGlvblxuICAgICAgLy8gam9pbiBlYWNoIGl0ZW0gaW4gdGhlIGFycmF5IGludG8gYSBzdHJpbmcgd2hlcmUgZWFjaCBpdGVtIGlzIHNlcGFyYXRlZCBieSBzZXBhcmF0b3JcbiAgICAgIC8vIGJlIHN1cmUgdG8gbWFpbnRhaW4gaW5kZW50YXRpb25cbiAgICAgIGNvbnN0IGluZGVudCA9IHJlc3VsdFNvRmFyLm1hdGNoKC8oXFxzKykkLylcbiAgICAgIGlmIChpbmRlbnQpIHtcbiAgICAgICAgc3Vic3RpdHV0aW9uID0gc3Vic3RpdHV0aW9uLmpvaW4oc2VwYXJhdG9yICsgaW5kZW50WzFdKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3Vic3RpdHV0aW9uID0gc3Vic3RpdHV0aW9uLmpvaW4oc2VwYXJhdG9yICsgJyAnKVxuICAgICAgfVxuICAgICAgLy8gaWYgY29uanVuY3Rpb24gaXMgc2V0LCByZXBsYWNlIHRoZSBsYXN0IHNlcGFyYXRvciB3aXRoIGNvbmp1bmN0aW9uXG4gICAgICBpZiAoY29uanVuY3Rpb24pIHtcbiAgICAgICAgY29uc3Qgc2VwYXJhdG9ySW5kZXggPSBzdWJzdGl0dXRpb24ubGFzdEluZGV4T2Yoc2VwYXJhdG9yKVxuICAgICAgICBzdWJzdGl0dXRpb24gPSBzdWJzdGl0dXRpb25cbiAgICAgICAgICAuc3Vic3RyKDAsIHNlcGFyYXRvckluZGV4KSArICcgJyArIGNvbmp1bmN0aW9uICtcbiAgICAgICAgICAgIHN1YnN0aXR1dGlvbi5zdWJzdHIoc2VwYXJhdG9ySW5kZXggKyAxKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3Vic3RpdHV0aW9uXG4gIH1cbn0pXG5cbmV4cG9ydCBkZWZhdWx0IGlubGluZUFycmF5VHJhbnNmb3JtZXJcbiJdfQ==